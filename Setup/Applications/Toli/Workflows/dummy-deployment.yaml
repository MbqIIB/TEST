harnessApiVersion: '1.0'
type: BASIC
envName: GCP
failureStrategies:
  - executionScope: WORKFLOW
    failureTypes:
      - APPLICATION_ERROR
    repairActionCode: ROLLBACK_WORKFLOW
    retryCount: 0
notificationRules:
  - conditions:
      - FAILED
    executionScope: WORKFLOW
    notificationGroups:
      - Account Administrator
phases:
  - type: KUBERNETES
    computeProviderName: exploration
    daemonSet: false
    infraMappingName: 'us-central1-a_cluster-hpa (GCP_Kubernetes::Google Cloud Platform:
        exploration) default.3'
    name: Phase 1
    phaseSteps:
      - type: CONTAINER_SETUP
        name: Setup Container
        steps:
          - type: KUBERNETES_SETUP
            name: Kubernetes Service Setup
            properties:
                serviceType: None
                replicationControllerName: ${service.name}
                fixedInstances: '1'
                customMetricYamlConfig: |-
          ---
                    apiVersion: autoscaling/v2beta1
                    kind: HorizontalPodAutoscaler
                    metadata:
                        name: dummy-deployment-hpa
                        namespace: default
                    spec:
                        scaleTargetRef:
                            apiVersion: apps/v1beta1
                            kind: Deployment
                            name: dummy-deployment
                        minReplicas: 1
                        maxReplicas: 5
                        metrics:
                          - type: Object
                            object:
                                target:
                                    kind: Pod
                                    name: custom-metrics-prometheus-stackdriver.0-78fb5bdfd4-z7b2c
                                metricName: foo
                                targetValue: 20
                useIstioRouteRule: false
                ingressYaml: |-
                    # Required placeholders: ${SERVICE_NAME} and ${SERVICE_PORT}
                    # ---
                    apiVersion: extensions/v1beta1
                    kind: Ingress
                    metadata:
                      name: name-will-be-replaced
                      annotations:
                        ingress.kubernetes.io/rewrite-target: /
                    spec:
                        rules:
                          - http:
                              paths:
                                - path: /path
                                  backend:
                                    serviceName: ${SERVICE_NAME}
                                    servicePort: ${SERVICE_PORT}
                desiredInstanceCount: fixedInstances
                useIngress: false
                useAutoscaler: true
                resizeStrategy: RESIZE_NEW_FIRST
                serviceSteadyStateTimeout: 10
        stepsInParallel: false
      - type: CONTAINER_DEPLOY
        name: Deploy Containers
        steps:
          - type: KUBERNETES_DEPLOY
            name: Upgrade Containers
            properties:
                commandName: Resize Replication Controller
                downsizeInstanceUnitType: PERCENTAGE
                instanceUnitType: PERCENTAGE
                instanceCount: '100'
        stepsInParallel: false
      - type: VERIFY_SERVICE
        name: Verify Service
        stepsInParallel: false
      - type: WRAP_UP
        name: Wrap Up
        stepsInParallel: false
    provisionNodes: false
    serviceName: dummy-deployment
rollbackPhases:
  - type: KUBERNETES
    computeProviderName: exploration
    daemonSet: false
    infraMappingName: 'us-central1-a_cluster-hpa (GCP_Kubernetes::Google Cloud Platform:
        exploration) default.3'
    name: Rollback Phase 1
    phaseNameForRollback: Phase 1
    phaseSteps:
      - type: CONTAINER_DEPLOY
        name: Deploy Containers
        phaseStepNameForRollback: Deploy Containers
        statusForRollback: SUCCESS
        steps:
          - type: KUBERNETES_DEPLOY_ROLLBACK
            name: Rollback Containers
            properties:
                rollback: true
        stepsInParallel: false
      - type: CONTAINER_SETUP
        name: Setup Container
        phaseStepNameForRollback: Setup Container
        statusForRollback: SUCCESS
        steps:
          - type: KUBERNETES_SETUP_ROLLBACK
            name: Rollback Kubernetes Setup
            properties:
                rollback: true
        stepsInParallel: false
      - type: VERIFY_SERVICE
        name: Verify Service
        phaseStepNameForRollback: Deploy Containers
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: WRAP_UP
        name: Wrap Up
        stepsInParallel: false
    provisionNodes: false
    serviceName: dummy-deployment
templatized: false
