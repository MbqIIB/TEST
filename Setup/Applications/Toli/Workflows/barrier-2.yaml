harnessApiVersion: '1.0'
type: BASIC
envName: physical
failureStrategies:
  - executionScope: WORKFLOW
    failureTypes:
      - APPLICATION_ERROR
    repairActionCode: ROLLBACK_WORKFLOW
    retryCount: 0
notificationRules:
  - conditions:
      - FAILED
    executionScope: WORKFLOW
    notificationGroups:
      - Account Administrator
phases:
  - type: ECS
    computeProviderName: harness_awd_nonprod
    daemonSet: false
    infraMappingName: 'demo (AWS_ECS::Amazon Web Services: harness_awd_nonprod) us-east-1'
    name: Phase 1
    phaseSteps:
      - type: CONTAINER_SETUP
        name: Setup Container
        steps:
          - type: ECS_SERVICE_SETUP
            name: ECS Service Setup
            properties:
                useLoadBalancer: false
                ecsServiceName: ${app.name}__${service.name}__${env.name}
                desiredInstanceCount: runningInstances
                maxInstances: 0
                resizeStrategy: RESIZE_NEW_FIRST
                serviceSteadyStateTimeout: 1
        stepsInParallel: false
      - type: CONTAINER_DEPLOY
        name: Deploy Containers
        steps:
          - type: ECS_SERVICE_DEPLOY
            name: Upgrade Containers
            properties:
                commandName: Resize Service Cluster
                instanceUnitType: COUNT
                instanceCount: '1'
          - type: SHELL_SCRIPT
            name: Shell Script
            properties:
                scriptType: BASH
                host: ec2-54-224-189-252.compute-1.amazonaws.com
                scriptString: echo "already done"
                timeoutMillis: 30000
                sshKeyRef: B94rqD8-SgGacwUI4d7k-w
                connectionType: SSH
        stepsInParallel: false
      - type: VERIFY_SERVICE
        name: Verify Service
        steps:
          - type: BARRIER
            name: Barrier
            properties:
                identifier: bar-1
                timeoutMillis: 600000
        stepsInParallel: false
      - type: WRAP_UP
        name: Wrap Up
        stepsInParallel: false
    provisionNodes: false
    serviceName: docker hub - toli
rollbackPhases:
  - type: ECS
    computeProviderName: harness_awd_nonprod
    daemonSet: false
    infraMappingName: 'demo (AWS_ECS::Amazon Web Services: harness_awd_nonprod) us-east-1'
    name: Rollback Phase 1
    phaseNameForRollback: Phase 1
    phaseSteps:
      - type: CONTAINER_DEPLOY
        name: Deploy Containers
        phaseStepNameForRollback: Deploy Containers
        statusForRollback: SUCCESS
        steps:
          - type: ECS_SERVICE_ROLLBACK
            name: Rollback Containers
            properties:
                rollback: true
        stepsInParallel: false
      - type: VERIFY_SERVICE
        name: Verify Service
        phaseStepNameForRollback: Deploy Containers
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: WRAP_UP
        name: Wrap Up
        stepsInParallel: false
    provisionNodes: false
    serviceName: docker hub - toli
templatized: false
