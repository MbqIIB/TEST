harnessApiVersion: '1.0'
type: KUBERNETES
advancedConfig: |-
    # Enter your Controller YAML spec below.
    #
    # Supported Controllers:
    #   ReplicationController
    #   Deployment
    #   ReplicaSet
    #   StatefulSet
    #   DaemonSet
    #
    # Placeholders:
    #
    # Required: ${DOCKER_IMAGE_NAME}
    #   - Replaced with the Docker image name and tag
    #
    # Optional: ${CONTAINER_NAME}
    #   - Replaced with a container name based on the image name
    #
    # Optional: ${CONFIG_MAP_NAME}
    #   - Replaced with the ConfigMap name (same as controller name)
    #     Config map contains all unencrypted service variables and
    #     all unencrypted config files, unless a custom
    #     config map is provided
    #
    # Optional: ${SECRET_MAP_NAME}
    #   - Replaced with the Secret name (same as controller name)
    #     Secret map contains all encrypted service variables and
    #     all encrypted config files
    #
    # Optional: ${SECRET_NAME}
    #   - Replaced with the name of the generated image pull
    #     secret when pulling from a private Docker registry
    #
    # Harness will set the controller name, namespace,
    # selector labels, and number of replicas.
    #
    # Service variables will be merged into environment
    # variables for all containers, overriding values if
    # the name is the same.
    #
    # ---
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    metadata:
        annotations: {}
        finalizers: 
        labels: {}
        ownerReferences: 
    spec:
        replicas: 0
        template:
            metadata:
                annotations: {}
                finalizers: 
                labels: {}
                ownerReferences: 
            spec:
                hostNetwork: true
                containers:
                  - name: kube-state-metrics
                    image: gcr.io/google_containers/kube-state-metrics:v1.0.0-rc.1
                    ports:
                          - name: http-metrics
                            containerPort: 8080
                    readinessProbe:
                        httpGet:
                            path: /healthz
                            port: 8080
                        initialDelaySeconds: 5
                        timeoutSeconds: 5
                    resources:
                        requests:
                            memory: 200Mi
                            cpu: 100m
                        limits:
                            memory: 300Mi
                            cpu: 200m
                  - name: prometheus-to-sd
                    image: ${DOCKER_IMAGE_NAME}
                    ports:
                          - name: profiler
                            containerPort: 6060
                    command:
                          - /monitor
                            - --stackdriver-prefix=custom.googleapis.com
                            - --source=kube-state-metrics:http://localhost:8080
                            - --pod-id=$(POD_NAME)
                            - --namespace-id=$(POD_NAMESPACE)
                    env:
                          - name: POD_NAME
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.namespace
