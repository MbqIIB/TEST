harnessApiVersion: '1.0'
type: BASIC
envName: Dev
failureStrategies:
  - executionScope: WORKFLOW
    failureTypes:
      - APPLICATION_ERROR
      - CONNECTIVITY
      - AUTHENTICATION
      - VERIFICATION_FAILURE
    repairActionCode: MANUAL_INTERVENTION
    retryCount: 0
notificationRules:
  - conditions:
      - FAILED
    executionScope: WORKFLOW
    notificationGroups:
      - Account Administrator
phases:
  - type: SSH
    computeProviderName: aws
    daemonSet: false
    infraMappingName: aws (AWS_SSH) us-east-1.1
    name: Phase 1
    phaseSteps:
      - type: PROVISION_NODE
        name: Provision Nodes
        steps:
          - type: AWS_NODE_SELECT
            name: Select Nodes
            properties:
                instanceUnitType: PERCENTAGE
                instanceCount: 100
                excludeSelectedHostsFromFuturePhases: true
                specificHosts: false
        stepsInParallel: false
      - type: DISABLE_SERVICE
        name: Disable Service
        stepsInParallel: false
      - type: DEPLOY_SERVICE
        name: Deploy Service
        steps:
          - type: COMMAND
            name: Install
            properties:
                commandName: Install
        stepsInParallel: false
      - type: ENABLE_SERVICE
        name: Enable Service
        stepsInParallel: false
      - type: VERIFY_SERVICE
        name: Verify Service
        steps:
          - type: HTTP
            name: Http
            properties:
                method: GET
                assertion: ${httpResponseCode}==200
                url: https://www.google.com/search?q=${host.hostName}
          - type: HTTP
            name: Http_2
            properties:
                method: GET
                assertion: ${httpResponseCode}==200
                url: https://www.google.com/search?q=${host.hostName}
          - type: HTTP
            name: Http_3
            properties:
                method: GET
                assertion: ${httpResponseCode}==200
                url: https://www.google.com/search?q=${host.hostName}
          - type: HTTP
            name: Http_4
            properties:
                method: GET
                assertion: ${httpResponseCode}==200
                url: https://www.google.com/search?q=${host.hostName}
          - type: HTTP
            name: Http_5
            properties:
                method: GET
                assertion: ${httpResponseCode}==200
                url: https://www.google.com/search?q=${host.hostName}
        stepsInParallel: false
      - type: WRAP_UP
        name: Wrap Up
        stepsInParallel: false
    provisionNodes: false
    serviceName: War Service
preDeploymentSteps:
  - type: ARTIFACT_CHECK
    name: Artifact Check
rollbackPhases:
  - type: SSH
    computeProviderName: aws
    daemonSet: false
    infraMappingName: aws (AWS_SSH) us-east-1.1
    name: Rollback Phase 1
    phaseNameForRollback: Phase 1
    phaseSteps:
      - type: DISABLE_SERVICE
        name: Disable Service
        phaseStepNameForRollback: Enable Service
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: STOP_SERVICE
        name: Stop Service
        phaseStepNameForRollback: Deploy Service
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: DEPLOY_SERVICE
        name: Deploy Service
        phaseStepNameForRollback: Deploy Service
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: ENABLE_SERVICE
        name: Enable Service
        phaseStepNameForRollback: Disable Service
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: VERIFY_SERVICE
        name: Verify Service
        phaseStepNameForRollback: Verify Service
        statusForRollback: SUCCESS
        stepsInParallel: false
      - type: WRAP_UP
        name: Wrap Up
        stepsInParallel: false
    provisionNodes: false
    serviceName: War Service
templatized: false
